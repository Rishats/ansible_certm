---

- name: Compose the CERTM client download base url
  set_fact:
    _certm_client_download_base_url: "https://github.com/Rishats/certm/releases/download/latest/certm-{{ go_arch }}"

- name: Compose the certm client download url with lastest release
  set_fact:
    _certm_client_download_url: "{{ _certm_client_download_base_url }}"
  when: certm_client_release | length == 0

- name: "Compose the certm client download url with release {{ certm_client_release }}"
  set_fact:
    _certm_client_download_url: "https://github.com/Rishats/certm/releases/download/{{ certm_client_release }}/certm-{{ go_arch }}"
  when: certm_client_release | length > 0

- name: Download the certm client
  get_url:
    url: "{{ _certm_client_download_url }}"
    dest: "{{ certm_client_bin }}/certm"
    owner: "root"
    group: "root"
    mode: 0755
  register: _download_client
  until: _download_client is succeeded
  retries: 5
  delay: 2

- name: Create certm group
  group:
    name: "{{ certm_group }}"
    state: present

- name: Create certm user
  user:
    name: "{{ certm_user }}"
    group: "{{ certm_group }}"
    system: "yes"
    shell: "/usr/sbin/nologin"

- name: Generate the certm server envfile
  template:
    src: certm.env.j2
    dest: "{{ certm_server_envfile }}"
    owner: "root"
    group: "{{ certm_group }}"
    mode: 0640
  notify: restart certm

- name: Create the certm server systemd config
  template:
    src: certm.service.j2
    dest: "/etc/systemd/system/certm.service"
    owner: "root"
    group: "root"
  when: ansible_service_mgr == "systemd"
  notify:
    - reload certm systemd
    - restart certm

- name: Enable and start the certm service
  service:
    name: certm
    state: started
    enabled: true
